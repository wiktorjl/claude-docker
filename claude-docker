#!/bin/bash

set -e

# Parse command line arguments
DEV_MODE=false
DOCKER_FILES_DIR=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --dev)
            DEV_MODE=true
            DOCKER_FILES_DIR="$2"
            shift 2
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: $0 [--dev /path/to/docker/files]"
            exit 1
            ;;
    esac
done

# Check if we have OAuth credentials or API key
if [ ! -f "$HOME/.claude/.credentials.json" ] && [ -z "$CLAUDE_API_KEY" ]; then
    echo "Warning: No authentication found"
    echo "Either:"
    echo "  - Make sure ~/.claude directory exists with OAuth credentials, or"
    echo "  - Set CLAUDE_API_KEY environment variable"
    echo ""
    echo "Continuing anyway - Claude will prompt for authentication if needed"
fi

# Set Docker files directory
if [ "$DEV_MODE" = true ]; then
    if [ -z "$DOCKER_FILES_DIR" ]; then
        echo "Error: --dev flag requires a directory path"
        exit 1
    fi
    if [ ! -d "$DOCKER_FILES_DIR" ]; then
        echo "Error: Directory $DOCKER_FILES_DIR does not exist"
        exit 1
    fi
    echo "Using dev mode with Docker files from: $DOCKER_FILES_DIR"
else
    DOCKER_FILES_DIR="$HOME/apps/claude-docker"
fi

CURRENT_DIR="$(pwd)"

export CODE_PATH="$CURRENT_DIR"
export USER_UID=$(id -u)
export USER_GID=$(id -g)

# Create shared Claude config if it doesn't exist
if [ ! -d "$HOME/claude-docker-config" ]; then
    echo "Creating shared Claude Docker configuration..."
    mkdir -p "$HOME/claude-docker-config"

    # Copy your existing config as a starting point
    if [ -f "$HOME/.claude/.credentials.json" ]; then
        cp "$HOME/.claude/.credentials.json" "$HOME/claude-docker-config/"
        echo "Copied OAuth credentials"
    fi

    if [ -f "$HOME/.claude/settings.json" ]; then
        cp "$HOME/.claude/settings.json" "$HOME/claude-docker-config/"
        echo "Copied settings"
    fi

    if [ -f "$HOME/.claude.json" ]; then
        cp "$HOME/.claude.json" "$HOME/claude-docker-config/"
        echo "Copied .claude.json"
    fi

    echo "Shared Docker config directory created at ~/claude-docker-config"
fi

# Build the image first
docker compose -f "$DOCKER_FILES_DIR/docker-compose.yml" build

# Run interactively with proper terminal forwarding
docker compose -f "$DOCKER_FILES_DIR/docker-compose.yml" run --rm claude-code